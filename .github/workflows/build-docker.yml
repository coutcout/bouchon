name: Docker build

on:
  push:
    branches:
      - feature/cicd

jobs:

  build:

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - name: List all files
        run: |
          ls
      - name: Get version
        id: get_version
        run: |
          RAW_BUILD_VERSION=$(grep "^version" build.gradle | sed -E 's/^version.*?\x27(.*?)\x27/\1/')
          echo "raw_project_version=$RAW_BUILD_VERSION" >> $GITHUB_ENV
          BUILD_VERSION=$(echo $RAW_BUILD_VERSION | sed -E 's/([0-9]*?\.[0-9]*?\.[0-9]*?).*/\1/')
          echo "project_version=$BUILD_VERSION" >> $GITHUB_ENV
          [[ $RAW_BUILD_VERSION = *-SNAPSHOT ]] && IS_SNAPSHOT=true || IS_SNAPSHOT=false
          echo "is_snapshot=$IS_SNAPSHOT" >> $GITHUB_ENV
      - name: print version
        run: |
          echo "test - Version ${{env.raw_project_version}} - ${{env.project_version}} - ${{env.is_snapshot}}"
      - name: Set up JDK 11
        uses: actions/setup-java@v2
        with:
          java-version: '11'
          distribution: 'adopt'
      - name: Gradle - Prepare build
        uses: gradle/gradle-build-action@v2
      - name: Gradle - Build
        run: gradle build
      - name: Publish Unit Test Results
        uses: EnricoMi/publish-unit-test-result-action@v1
        if: always()
        with:
          files: build/test-results/junit/**/*.xml
      - name: Codecov
        uses: codecov/codecov-action@v2
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          flags: build # optional
      - name: List all files
        run: |
          ls
      - name: Caching files
        uses: actions/cache@v2
        with:
          path: |
            ./build/libs/bouchon-${{ env.raw_project_version }}.jar
          key: ${{ env.raw_project_version }}-artifacts-${{ github.run_id }}
          restore-keys: |
            ${{ env.raw_project_version }}
            artifacts
    outputs:
      raw-project-version: ${{ env.raw_project_version }}
      cache-key: ${{ env.raw_project_version }}-artifacts-${{ github.run_id }}

  docker-build-push:
    needs: build
    uses: ./.github/workflows/docker-push.yml
    with:
      cache-key: $${{ needs.build.outputs.cache-key }}
      jar-path: ./build/libs/bouchon-${{ needs.build.outputs.raw-project-version }}.jar
      image-version: ${{ needs.build.outputs.raw-project-version }}
      docker-build-args: |
        CONFIG_FOLDER=./config
    secrets:
      username: ${{ secrets.DOCKERHUB_USERNAME }}
      token: ${{ secrets.DOCKERHUB_TOKEN }}
